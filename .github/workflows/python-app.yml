# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Pull Data
      run: |
        python main.py  --get_data True --roboflow_api_key ${{secrets.ROBOFLOW_API_KEY}} --train_model False --register_model False --build_image False   --remove_logs False --logging_level INFO
    - name: Train Model
      run: |
        python main.py  --get_data False --train_model True --register_model False --build_image False   --remove_logs False --logging_level INFO
    - name: Evaluate and Register Model
      env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      run: |
        python main.py  --get_data False --train_model False --model_evaluation True --register_model True  --model_path "runs/detect/train" --build_image False  --remove_logs False --logging_level INFO


